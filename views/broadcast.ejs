<% if (!user) { %>
	<p>Welcome! Please <a href="/login">log in</a>.</p>
<% } else { %>
	<%= username %>
	<video playsinline autoplay muted></video>ss
	<script src="/socket.io/socket.io.js"></script>
	<script>
		const socket = io.connect(window.location.origin);
		const video = document.querySelector('video');
	</script>

<script>
	/*global socket, video, config*/
	const peerConnections = {};
	
	/** @type {MediaStreamConstraints} */
	const constraints = {
		// audio: true,
		video: {facingMode: "user"}
	};
	
	navigator.mediaDevices.getDisplayMedia(constraints)
	.then(function(stream) {
		video.srcObject = stream;
		socket.emit('broadcaster');
	}).catch(error => console.error(error));
	
	socket.on('answer', function(id, description) {
		peerConnections[id].setRemoteDescription(description);
	});
	
	socket.on('watcher', function(id) {
		const peerConnection = new RTCPeerConnection();
		peerConnections[id] = peerConnection;
		let stream = video.srcObject;
        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));
		peerConnection.createOffer()
		.then(sdp => peerConnection.setLocalDescription(sdp))
	.then(function () {
		socket.emit('offer', id, peerConnection.localDescription);
	});
	peerConnection.onicecandidate = function(event) {
		if (event.candidate) {
			socket.emit('candidate', id, event.candidate);
		}
	};
});

socket.on('candidate', function(id, candidate) {
	peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));
});

socket.on('bye', function(id) {
	peerConnections[id] && peerConnections[id].close();
	delete peerConnections[id];
});

</script>
<% } %>